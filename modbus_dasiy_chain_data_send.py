import serial
import time

SERIAL_PORT = "COM5"
BAUD_RATE = 19200
DATA_BITS = serial.EIGHTBITS
PARITY = serial.PARITY_NONE
STOP_BITS = serial.STOPBITS_ONE
DATA_PACKETS = [
    bytes.fromhex(
        "09 30 00 03 04 06 00 00 04 00 04 00 E0 5C CD 5C 40 1B F8 D0 30 BD 2D E9 FE 4F 81 EA 03 04 04 F0 00 44 21 F0 00 "
        "41 00 94 4F F0 00 0B 23 F0 00 43 50 EA 01 04 5E D0 52 EA 03 04 5B D0 C3 F3 0A 54 C1 F3 0A 55 2C 44 A4 F2 F3 34 "
        "01 94 A0 FB 02 54 C1 F3 13 01 41 F4 80 11 C3 F3 13 03 43 F4 80 13 01 FB 02 44 00 FB 03 4E 84 0A 97 0A 44 EA 81 "
        "54 47 EA 83 57 A4 FB 07 68 02 95 8D 0A 05 FB 07 85 4F EA 93 2C 04 FB 0C 54 27 05 02 9D 4F EA 06 58 47 EA 16 37 "
        "B5 EB 08 05 6E EB 07 0C 87 0E 92 0E 47 EA 81 17 42 EA 83 12 A7 FB 02 01 B6 EB 0B 01 64 EB 00 04 2B 0D 43 EA 0C "
        "33 5E 18 44 EB 1C 50 DA 46 51 46 E7 FB 02 01 C5 F3 13 04 4F EA 0B 33 43 EA 14 53 4F EA 04 32 01 9C 43 EA 06 03 "
        "A4 F1 0C 04 02 94 00 9C CD E9 00 B4 00 F0 8B F8 03 B0 BD E8 F0 8F 00 20 01 46 F9 E7 0E B5 40 F2 33 41 02 91 00 "
        "21 CD E9 00 11 0A 46 0B 46 00 F0 7A F8 03 B0 00 BD 01 F0 00 43 30 B4 21 F0 00 41 50 EA 01 02 06 D0 0A 0D A2 F5 "
        "60 72 C1 F3 13 01 00 2A 02 DC 30 BC 00 20 70 47 44 0F 44 EA C1 04 C1 00 E0 18 30 BC 00 EB C2 50 00 F0 16 B8 30 "
        "B5 0B 46 01 46 00 20 20 22 01 24 09 E0 21 FA 02 F5 9D 42 05 D3 03 FA 02 F5 49 1B 04 FA 02 F5 28 44 15 1E A2 F1 "
        "01 02 F1 DC 30 BD 00 29 A8 BF 70 47 40 1C 49 00 08 BF 20 F0 01 00 70 47 10 B4 B0 FA 80 FC 00 FA 0C F0 50 EA 01 "
        "04 04 BF 10 BC 70 47 49 B1 CC F1 20 04 21 FA 04 F4 11 FA 0C F1 18 BF 01 21 21 43 08 43 A3 EB 0C 01 CB 1D 4F EA "
        "00 61 4F EA 10 20 42 BF 00 20 10 BC 70 47 00 EB C3 50 10 44 00 29 A4 BF 10 BC 70 47 40 1C 49 00 08 BF 20 F0 01 "
        "00 10 BC 70 47 10 B5 14 1E 73 F1 00 04 08 DA 40 1C 41 F1 00 01 92 18 5B 41 1A 43 01 D1 20 F0 01 00 10 BD 2D E9 "
        "F0 4D 92 46 9B 46 11 B1 B1 FA 81 F2 02 E0 B0 FA 80 F2 20 32 90 46 00 F0 52 F8 04 46 0F 46 40 EA 0A 00 41 EA 0B "
        "01 53 46 5A 46 08 43 13 D0 11 46 53 EA 01 00 19 D0 C8 F1 40 02 50 46 00 F0 4E F8 05 46 0E 46 50 46 59 46 42 46 "
        "00 F0 38 F8 08 43 05 D0 01 20 04 E0 20 46 39 46 BD E8 F0 8D 00 20 05 43 46 EA E0 76 2C 43 37 43 0A 98 63 05 E4 "
        "0A A0 EB 08 00 00 22 FD 0A 44 EA 47 54 0A 30 02 D5 00 20 01 46 E9 E7 01 05 10 19 69 41 DD E9 08 45 00 19 69 41 "
        "BD E8 F0 4D A2 E7 06 4C 07 4D 06 E0 E0 68 40 F0 01 03 94 E8 07 00 98 47 10 34 AC 42 F6 D3 FF F7 50 FE 88 D2 01 "
        "08 A8 D2 01 08 20 2A 04 DB 20 3A 00 FA 02 F1 00 20 70 47 91 40 C2 F1 20 03 20 FA 03 F3 19 43 90 40 70 47 20 2A "
        "04 DB 20 3A 21 FA 02 F0 00 21 70 47 21 FA 02 F3 D0 40 C2 F1 20 02 91 40 08 43 19 46 70 47 70 B5 8D 18 10 F8 01 "
        "4B 14 F0 03 02 01 D1 10 F8 01 2B 23 11 06 D1 10 F8 01 3B 03 E0 10 F8 01 6B 01 F8 01 6B 52 1E F9 D1 AB B1 10 F8 "
        "01 2B 04 F0 0C 04 8A 1A 0C 2C 03 D0 A2 EB 84 12 9B 1C 08 E0 10 F8 01 4B A2 EB 04 22 F8 E7 12 F8 01 4B 01 F8 01 "
        "4B 5B 1E F9 D5 A9 42 D4 D3 00 20 70 BD 0F 49 B1 F8 20 13 29 B1 0D 49 B1 F8 20 23 0D 49 A1 F8 66 20 0B 49 B1 F8 "
        "66 10 01 EB 81 01 B0 EB 41 0F 06 DB 07 49 B1 F8 66 10 01 EB 81 01 48 00 02 E0 00 28 00 DC 00 20 03 49 08 60 70 "
        "47 00 00 A0 48 00 20 D8 02 00 20 EC E5 00 20 10 B5 01 F0 97 FB FE 48 02 F0 F7 FD FC 48 00 1F 00 88 0C 28 7D D2 "
        "DF E8 10 F0 7C 00 0C 00 CC 00 97 01 50 02 FE 02 AB 03 6D 04 1A 05 DA 05 AD 06 6A 07 F3 48 00 1F 00 79 01 28 38 "
        "D1 F0 48 00 1F 00 7C 00 28 32 D0 00 21 ED 48 00 1F 01 74 40 8C 40 1C 81 B2"),

    bytes.fromhex(
        "09 30 00 03 04 06 00 00 08 00 04 00 E7 48 00 1F 00 88 00 EB 80 01 E5 48 44 30 00 EB 81 00 40 88 40 1C"
        " 81 B2 E1 48 00 1F 00 88 00 EB 80 02 DF 48 44 30 00 EB 82 00 41 80 00 21 DC 48 00 1F 00 88 00 EB 80 02"
        " D9 48 44 30 00 EB 82 00 C1 73 4F F4 FA 71 D6 48 02 F0 9D FD 80 E0 D4 48 00 1F 00 79 02 28 7B D1 D1 48"
        " 00 1F 00 88 00 EB 80 01 CF 48 44 30 00 EB 81 00 C0 7B 40 B3 01 21 CB 48 00 1F 00 88 00 EB 80 02 C9 48"
        " 44 30 00 EB 82 00 01 74 C6 48 00 1F 00 88 00 EB 80 01 C4 48 44 30 00 EB 81 00 80 88 40 1C 81 B2 C0 48"
        " 00 1F 00 88 00 EB 80 02 BE 48 44 30 00 EB 82 00 81 80 00 E0 EE E3 4F F4 FA 71 02 20 01 F0 FF F8 47 E0"
        " B7 48 00 1F 40 69 E8 BB B5 48 00 1F 00 7F 40 1C C1 B2 B3 48 00 1F 01 77 00 88 00 EB 80 01 B0 48 44 30"
        " 00 EB 81 00 00 89 40 1C 81 B2 AC 48 00 1F 00 88 00 EB 80 02 AA 48 44 30 00 EB 82 00 01 81 02 21 A7 48"
        " 00 1F 00 88 00 EB 80 02 A4 48 44 30 00 EB 82 00 01 74 A2 48 00 1F 00 88 00 EB 80 01 9F 48 44 30 00 EB"
        " 81 00 00 7B 40 1C C1 B2 9C 48 00 1F 00 88 00 EB 80 02 99 48 44 30 00 EB 82 00 01 73 00 E0 04 E0 4F F4"
        " FA 71 02 20 01 F0 B6 F8 9E E3 93 48 00 1F 00 79 01 28 38 D1 90 48 00 1F 00 7C 00 28 32 D0 00 21 8D 48"
        " 00 1F 01 74 40 8C 40 1C 81 B2 8A 48 00 1F 41 84 01 20 00 F0 44 FF 87 48 00 1F 00 88 00 EB 80 01 85 48"
        " 44 30 00 EB 81 00 40 88 40 1C 81 B2 81 48 00 1F 00 88 00 EB 80 02 7F 48 44 30 00 EB 82 00 41 80 00 21"
        " 7C 48 00 1F 00 88 00 EB 80 02 79 48 44 30 00 EB 82 00 C1 73 4F F4 FA 71 76 48 02 F0 DD FC 8B E0 74 48"
        " 00 1F 00 79 02 28 30 D1 71 48 00 1F 00 88 00 EB 80 01 6F 48 44 30 00 EB 81 00 C0 7B 30 B3 01 21 6B 48"
        " 00 1F 00 88 00 EB 80 02 69 48 44 30 00 EB 82 00 01 74 66 48 00 1F 00 88 00 EB 80 01 64 48 44 30 00 EB"
        " 81 00 80 88 40 1C 81 B2 60 48 00 1F 00 88 00 EB 80 02 5E 48 44 30 00 EB 82 00 81 80 4F F4 FA 71 03 20"
        " 01 F0 41 F8 54 E0 58 48 00 1F 40 69 E8 BB 56 48 00 1F 00 7F 40 1C C1 B2 54 48 00 1F 01 77 00 88 00 EB"
        " 80 01 51 48 44 30 00 EB 81 00 00 89 40 1C 81 B2 4D 48 00 1F 00 88 00 EB 80 02 4B 48 44 30 00 EB 82 00"
        " 01 81 02 21 48 48 00 1F 00 88 00 EB 80 02 45 48 44 30 00 EB 82 00 01 74 43 48 00 1F 00 88 00 EB 80 01"
        " 40 48 44 30 00 EB 81 00 00 7B 40 1C C1 B2 3D 48 00 1F 00 88 00 EB 80 02 3A 48 44 30 00 EB 82 00 01 73"
        " 00 E0 11 E0 38 48 00 79 20 F0 40 00 40 30 35 49 08 71 35 48 B0 F8 6E 00 20 B9 08 46 00 79 20 F0 40 00"
        " 08 71 01 F0 09 F8 33 E7 2D 48 00 1F 00 79 01 28 38 D1 2B 48 00 1F 00 7C 00 28 32 D0 00 21 28 48 00 1F"
        " 01 74 40 8C 40 1C 81 B2 25 48 00 1F 41 84 25 20 00 F0 79 FE 22 48 00 1F 00 88 00 EB 80 01 1F 48 44 30"
        " 00 EB 81 00 40 88 40 1C 81 B2 1C 48 00 1F 00 88 00 EB 80 02 19 48 44 30 00 EB 82 00 41 80 00 21 16 48"
        " 00 1F 00 88 00 EB 80 02 14 48 44 30 00 EB 82 00 C1 73 4F F4 FA 71 10 48 02 F0 12 FC 79 E0 0E 48 00 1F"
        " 00 79 02 28 74 D1 0C 48 00 1F 00 88 00 EB 80 01 09 48 44 30 00 EB 81 00 C0 7B 58 B3 01 21 06 48 00 1F"
        " 00 88 00 EB 80 02 03 48 44 30 00 EB 82 00 01 74 01 48 00 1F 05 E0 8C D0 00 20 04 01 00 20 D8 02 00 20"
        " 00 88 00 EB 80 01 FE 48 00 EB 81 00 80 88 40 1C 81 B2 FB 48 48 38 00 88 00 EB 80 02 F8 48 00 EB 82 00"
        " 81 80 4F F4 FA 71 04 20 00 F0 71 FF 3D E0 F3 48 48 38 40 69 C8 BB F1 48 48 38 00 7F 40 1C C1 B2 EF 48 48 38 01 77"),

    bytes.fromhex(
        "09 30 00 03 04 06 00 00 0C 00 04 00 00 89 40 1C 81 B2 E9 48 48 38 00 88 00 EB 80 02 E6 48 00 EB 82 00"
        " 01 81 02 21 E4 48 48 38 00 88 00 EB 80 02 E1 48 00 EB 82 00 01 74 DF 48 48 38 00 88 00 EB 80 01 DD 48"
        " 00 EB 81 00 00 7B 40 1C C1 B2 DA 48 48 38 00 88 00 EB 80 02 D7 48 00 EB 82 00 01 73 00 F0 50 FF 7A E6"
        " D4 48 48 38 00 79 01 28 36 D1 D1 48 48 38 00 7C 00 28 30 D0 00 21 CE 48 48 38 01 74 40 8C 40 1C 81 B2"
        " CB 48 48 38 41 84 26 20 00 F0 C0 FD C8 48 48 38 00 88 00 EB 80 01 C6 48 00 EB 81 00 40 88 40 1C 81 B2"
        " C3 48 48 38 00 88 00 EB 80 02 C0 48 00 EB 82 00 41 80 00 21 BE 48 48 38 00 88 00 EB 80 02 BB 48 00 EB"
        "82 00 C1 73 4F F4 FA 71 B8 48 44 38 02 F0 5B FB 70 E0 B6 48 48 38 00 79 02 28 6B D1 B3 48 48 38 00 88"
        " 00 EB 80 01 B1 48 00 EB 81 00 C0 7B 18 B3 01 21 AE 48 48 38 00 88 00 EB 80 02 AB 48 00 EB 82 00 01 74"
        " A9 48 48 38 00 88 00 EB 80 01 A7 48 00 EB 81 00 80 88 40 1C 81 B2 A4 48 48 38 00 88 00 EB 80 02 A1 48"
        " 00 EB 82 00 81 80 4F F4 FA 71 05 20 00 F0 C3 FE 3D E0 9C 48 48 38 40 69 C8 BB 9A 48 48 38 00 7F 40 1C"
        " C1 B2 98 48 48 38 01 77 00 88 00 EB 80 01 95 48 00 EB 81 00 00 89 40 1C 81 B2 92 48 48 38 00 88 00 EB"
        " 80 02 8F 48 00 EB 82 00 01 81 02 21 8D 48 48 38 00 88 00 EB 80 02 8A 48 00 EB 82 00 01 74 88 48 48 38"
        " 00 88 00 EB 80 01 86 48 00 EB 81 00 00 7B 40 1C C1 B2 83 48 48 38 00 88 00 EB 80 02 80 48 00 EB 82 00"
        " 01 73 00 F0 A2 FE CC E5 7D 48 48 38 00 79 01 28 34 D1 7A 48 48 38 00 7C 00 28 2E D0 00 21 77 48 48 38"
        " 01 74 40 8C 40 1C 81 B2 74 48 48 38 41 84 00 F0 77 FD 72 48 48 38 00 88 00 EB 80 01 6F 48 00 EB 81 00"
        " 40 88 40 1C 81 B2 6C 48 48 38 00 88 00 EB 80 02 6A 48 00 EB 82 00 41 80 00 21 67 48 48 38 00 88 00 EB"
        " 80 02 65 48 00 EB 82 00 C1 73 32 21 62 48 44 38 02 F0 AF FA 71 E0 60 48 48 38 00 79 02 28 6C D1 5D 48"
        " 48 38 00 88 00 EB 80 01 5B 48 00 EB 81 00 C0 7B 10 B3 01 21 58 48 48 38 00 88 00 EB 80 02 55 48 00 EB"
        " 82 00 01 74 53 48 48 38 00 88 00 EB 80 01 51 48 00 EB 81 00 80 88 40 1C 81 B2 4E 48 48 38 00 88 00 EB"
        " 80 02 4B 48 00 EB 82 00 81 80 32 21 06 20 00 F0 18 FE 3F E0 47 48 48 38 40 69 D8 BB 45 48 48 38 00 7F"
        " 40 1C C1 B2 42 48 48 38 01 77 00 88 00 EB 80 01 3F 48 00 EB 81 00 00 89 40 1C 81 B2 3C 48 48 38 00 88"
        " 00 EB 80 02 3A 48 00 EB 82 00 01 81 02 21 37 48 48 38 00 88 00 EB 80 02 35 48 00 EB 82 00 01 74 33 48"
        " 48 38 00 88 00 EB 80 01 30 48 00 EB 81 00 00 7B 40 1C C1 B2 2D 48 48 38 00 88 00 EB 80 02 2B 48 00 EB"
        " 82 00 01 73 32 21 06 20 00 F0 D7 FD 1F E5 26 48 48 38 00 79 01 28 35 D1 24 48 48 38 00 7C 00 28 2F D0"
        " 00 21 21 48 48 38 01 74 40 8C 40 1C 81 B2 1E 48 48 38 41 84 10 20 00 F0 65 FC 1B 48 48 38 00 88 00 EB"
        " 80 01 18 48 00 EB 81 00 40 88 40 1C 81 B2 15 48 48 38 00 88 00 EB 80 02 13 48 00 EB 82 00 41 80 00 21"
        " 10 48 48 38 00 88 00 EB 80 02 0E 48 00 EB 82 00 C1 73 32 21 0B 48 44 38 02 F0 01 FA 84 E0 09 48 48 38"
        " 00 79 02 28 7F D1 06 48 48 38 00 88 00 EB 80 01 04 48 00 EB 81 00 C0 7B 88 B3 01 21 01 48 48 38 01 E0"
        " D0 D0 00 20 00 88 00 EB 80 02 FE 48 00 EB 82 00 01 74 FC 48 48 38 00 88 00 EB 80 01 F9 48 00 EB 81 00"
        " 80 88 40 1C 81 B2 F6 48 48 38 00 88 00 EB 80 02 F4 48 00 EB 82 00 81 80 F2 48 48 38 B0 F8 44 00 01 28 0B D1 00 20")
]

try:
    # initial serial
    ser = serial.Serial(
        port=SERIAL_PORT,
        baudrate=BAUD_RATE,
        bytesize=DATA_BITS,
        parity=PARITY,
        stopbits=STOP_BITS,
        timeout=1
    )

    if ser.is_open:
        print(f"Serial port {SERIAL_PORT} opened successfully.")
    else:
        print(f"Failed to open serial port {SERIAL_PORT}.")
        exit(1)

    # 30 sec as interval to send data packet
    while True:
        for packet in DATA_PACKETS:
            ser.write(packet)  # 发送数据包
            print(f"Data packet sent: {packet.hex()}")
        time.sleep(30)  # 等待半分钟再发送下一轮

except serial.SerialException as e:
    print(f"Serial port error: {e}")
except Exception as e:
    print(f"Unexpected error: {e}")
finally:
    if 'ser' in locals() and ser.is_open:
        ser.close()
        print("Serial port closed.")